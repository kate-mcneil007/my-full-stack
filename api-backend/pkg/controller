package controller

import (
	"net/http"
	"strconv"

	"github.com/labstack/echo/v4"
)

// HandlerInterface defines the methods that a handler should implement
type HandlerInterface interface {
	Hello(c echo.Context) error
	CreateInventoryItem(c echo.Context) error
	GetInventoryItem(c echo.Context) error
	UpdateInventoryItem(c echo.Context) error
	DeleteInventoryItem(c echo.Context) error
}

// Controller implements the HandlerInterface
type Controller struct {
	// service ServiceInterface
	// logger ? maybe
}

// NewController creates a new instance of the Controller
func NewController() HandlerInterface {
	return &Controller{}
}

// Implement methods for the HandlerInterface
func (c *Controller) Hello(ctx echo.Context) error {
	return ctx.String(http.StatusOK, "Hello, World!")
}

func (c *Controller) CreateInventoryItem(ctx echo.Context) error {
	return c.JSON(200, database.Item{ID: 1})
}

func (c *Controller) GetInventoryItem(ctx echo.Context) error {
	id, err := strconv.Atoi(ctx.Param("id"))
	if err != nil {
		return ctx.JSON(http.StatusInternalServerError, "Error")
	}
	// Your logic to retrieve an inventory item using the provided ID
	return ctx.JSON(http.StatusOK, database.Item{ID: id})
}

func (c *Controller) UpdateInventoryItem(ctx echo.Context) error {
	return c.JSON(200, database.Item{ID: 1})
}

func (c *Controller) DeleteInventoryItem(ctx echo.Context) error {
	return c.JSON(200, database.Item{ID: 1})
}
